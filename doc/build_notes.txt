# build the dev machine
# from vanila debian image

# make apt-get faster
nano /etc/sysctl.conf
#append
    net.ipv6.conf.all.disable_ipv6 = 1
    ​net.ipv6.conf.default.disable_ipv6 = 1
    ​net.ipv6.conf.lo.disable_ipv6 = 1
reboot
apt-get install netselect-apt
netselect-apt stable
sudo apt-get update

# samba
apt-get install samba
nano /etc/samba/smb.conf
    [global]
    workgroup = WORKGROUP
    netbios name = server1
    security = user
    map to guest = Bad User
    dns proxy = no
systemctl restart smbd

# enable root on ssh
nano /etc/ssh/sshd_config
#replace
    #PermitRootLogin prohibit-password
#with
    PermitRootLogin yes
rc-service sshd restart

# nodejs
apt-get install git sudo curl
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
apt-get install nodejs
npm install n -g
n latest
npm install -g npm

# shared folders
apt-get install dkms build-essential linux-headers-amd64
# Devices / Install guest additions
mount /dev/sr0 /media/cdrom
cd /media/cdrom
./VBoxLinuxAdditions.run
# mount the shared drive on the VM 'Devices'/'Shared folders'
shutdown now
# run this on the host machine
# debian = VM name
# shared = share name
"C:\Program Files\Oracle\VirtualBox\VBoxManage" setextradata debian VBoxInternal2/SharedFoldersEnableSymlinksCreate/shared 1
ls /media/sf_shared

# docker
apt-get install apt-transport-https ca-certificates gnupg2 software-properties-common
curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"
sudo apt-get update
sudo apt-get install docker-ce

# everyday docker commands

# local build
docker build -t cloning-vat https://github.com/vizmi/cloning-vat.git
# tag
# push
# get to the container with command line
docker run -it cloning-vat /bin/ash
# start the container
docker run -d -rm -p 80:80 cloning-vat
